/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { Type } from '@angular/core';
export { CheckboxControlValueAccessor } from '@angular/forms/src/directives/checkbox_value_accessor';
export { ControlValueAccessor } from '@angular/forms/src/directives/control_value_accessor';
export { DefaultValueAccessor } from '@angular/forms/src/directives/default_value_accessor';
export { NgControl } from '@angular/forms/src/directives/ng_control';
export { NgControlStatus, NgControlStatusGroup } from '@angular/forms/src/directives/ng_control_status';
export { NgForm } from '@angular/forms/src/directives/ng_form';
export { NG_FORM_SELECTOR_WARNING, NgFormSelectorWarning } from '@angular/forms/src/directives/ng_form_selector_warning';
export { NgModel } from '@angular/forms/src/directives/ng_model';
export { NgModelGroup } from '@angular/forms/src/directives/ng_model_group';
export { NumberValueAccessor } from '@angular/forms/src/directives/number_value_accessor';
export { RadioControlValueAccessor } from '@angular/forms/src/directives/radio_control_value_accessor';
export { RangeValueAccessor } from '@angular/forms/src/directives/range_value_accessor';
export { FormControlDirective, NG_MODEL_WITH_FORM_CONTROL_WARNING } from '@angular/forms/src/directives/reactive_directives/form_control_directive';
export { FormControlName } from '@angular/forms/src/directives/reactive_directives/form_control_name';
export { FormGroupDirective } from '@angular/forms/src/directives/reactive_directives/form_group_directive';
export { FormArrayName, FormGroupName } from '@angular/forms/src/directives/reactive_directives/form_group_name';
export { NgSelectOption, SelectControlValueAccessor } from '@angular/forms/src/directives/select_control_value_accessor';
export { NgSelectMultipleOption, SelectMultipleControlValueAccessor } from '@angular/forms/src/directives/select_multiple_control_value_accessor';
export declare const SHARED_FORM_DIRECTIVES: Type<any>[];
export declare const TEMPLATE_DRIVEN_DIRECTIVES: Type<any>[];
export declare const REACTIVE_DRIVEN_DIRECTIVES: Type<any>[];
/**
 * Internal module used for sharing directives between FormsModule and ReactiveFormsModule
 */
export declare class InternalFormsSharedModule {
}
